version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: whatsapp_bot_backend_dev
    volumes:
      - .:/workspace:cached
    command: sleep infinity
    networks:
      - chatbot-network
    environment:
      PYTHONPATH: /workspace/backend/app
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@database:5432/${POSTGRES_DB:-chatbotdb}
      REDIS_URL: redis://redis:6379/0
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started

    ports:
      - "8000:8000"        

  database:
    image: pgvector/pgvector:pg17
    container_name: whatsapp_bot_db_dev
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-chatbotdb}
    ports:
      - "5432:5432"
    networks:
      - chatbot-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-chatbotdb}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: whatsapp_bot_redis_dev
    restart: always
    ports:
      - "6379:6379"
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  chatbot-network:
    name: whatsapp_bot_network_dev
    driver: bridge

volumes:
  postgres_data:
    name: whatsapp_bot_postgres_data_dev