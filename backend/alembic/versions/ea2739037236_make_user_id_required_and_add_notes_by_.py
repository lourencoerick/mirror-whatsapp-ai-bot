"""make user_id required and add notes_by_admin

Revision ID: ea2739037236
Revises: 097e90eea95e
Create Date: 2025-05-26 02:00:49.752455

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ea2739037236"
down_revision: Union[str, None] = "097e90eea95e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("beta_testers", "email", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "beta_testers",
        "notes_by_admin",
        existing_type=sa.TEXT(),
        comment="Internal notes by admin",
        existing_comment="Internal notes by admin regarding this applicant",
        existing_nullable=True,
    )
    op.alter_column(
        "beta_testers",
        "approved_by_admin_id",
        existing_type=sa.VARCHAR(),
        comment="Clerk User ID of admin",
        existing_nullable=True,
    )
    op.alter_column("beta_testers", "user_id", existing_type=sa.UUID(), nullable=False)
    op.drop_constraint("beta_testers_account_id_key", "beta_testers", type_="unique")
    op.drop_constraint("beta_testers_user_id_key", "beta_testers", type_="unique")
    op.create_index(
        op.f("ix_beta_testers_account_id"), "beta_testers", ["account_id"], unique=True
    )
    op.create_index(
        op.f("ix_beta_testers_user_id"), "beta_testers", ["user_id"], unique=True
    )
    op.drop_constraint("beta_testers_user_id_fkey", "beta_testers", type_="foreignkey")
    op.drop_constraint(
        "beta_testers_account_id_fkey", "beta_testers", type_="foreignkey"
    )
    op.create_foreign_key(
        "beta_testers_account_id_fkey_cascade",
        "beta_testers",
        "accounts",
        ["account_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "beta_testers_user_id_fkey_cascade",
        "beta_testers",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "beta_testers_account_id_fkey_cascade", "beta_testers", type_="foreignkey"
    )
    op.drop_constraint(
        "beta_testers_user_id_fkey_cascade", "beta_testers", type_="foreignkey"
    )
    op.create_foreign_key(
        "beta_testers_account_id_fkey",
        "beta_testers",
        "accounts",
        ["account_id"],
        ["id"],
    )
    op.create_foreign_key(
        "beta_testers_user_id_fkey", "beta_testers", "users", ["user_id"], ["id"]
    )
    op.drop_index(op.f("ix_beta_testers_user_id"), table_name="beta_testers")
    op.drop_index(op.f("ix_beta_testers_account_id"), table_name="beta_testers")
    op.create_unique_constraint("beta_testers_user_id_key", "beta_testers", ["user_id"])
    op.create_unique_constraint(
        "beta_testers_account_id_key", "beta_testers", ["account_id"]
    )
    op.alter_column("beta_testers", "user_id", existing_type=sa.UUID(), nullable=True)
    op.alter_column(
        "beta_testers",
        "approved_by_admin_id",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Clerk User ID of admin",
        existing_nullable=True,
    )
    op.alter_column(
        "beta_testers",
        "notes_by_admin",
        existing_type=sa.TEXT(),
        comment="Internal notes by admin regarding this applicant",
        existing_comment="Internal notes by admin",
        existing_nullable=True,
    )
    op.alter_column("beta_testers", "email", existing_type=sa.VARCHAR(), nullable=True)
    # ### end Alembic commands ###
