"""add beta testers table

Revision ID: 097e90eea95e
Revises: 90e090a3db50
Create Date: 2025-05-26 01:41:13.877800

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "097e90eea95e"
down_revision: Union[str, None] = "90e090a3db50"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

DB_ENUM_VALUES = ("pending_approval", "approved", "denied", "invited")
BETA_STATUS_ENUM_NAME = "beta_status_enum"
db_beta_status_enum = postgresql.ENUM(*DB_ENUM_VALUES, name=BETA_STATUS_ENUM_NAME)


def upgrade() -> None:
    # db_beta_status_enum.create(op.get_bind(), checkfirst=True)
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "beta_testers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column(
            "contact_name",
            sa.String(),
            nullable=True,
            comment="Full name of the contact person",
        ),
        sa.Column("company_name", sa.String(), nullable=True),
        sa.Column("company_website", sa.String(), nullable=True),
        sa.Column(
            "business_description",
            sa.Text(),
            nullable=True,
            comment="Brief description of their business",
        ),
        sa.Column(
            "beta_goal",
            sa.Text(),
            nullable=True,
            comment="Main objective for joining the beta",
        ),
        sa.Column("has_sales_team", sa.Boolean(), nullable=True),
        sa.Column(
            "sales_team_size",
            sa.String(),
            nullable=True,
            comment="e.g., '1-2', '3-5', '6-10', '11-20', '20+'",
        ),
        sa.Column(
            "avg_leads_per_period",
            sa.String(),
            nullable=True,
            comment="e.g., 'Less than 10/day', '10-50/day'",
        ),
        sa.Column(
            "current_whatsapp_usage",
            sa.String(),
            nullable=True,
            comment="e.g., 'Manually', 'Other tool', 'Not actively'",
        ),
        sa.Column("willing_to_give_feedback", sa.Boolean(), nullable=True),
        sa.Column(
            "status",
            db_beta_status_enum,
            nullable=False,
        ),
        sa.Column(
            "requested_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "notes_by_admin",
            sa.Text(),
            nullable=True,
            comment="Internal notes by admin regarding this applicant",
        ),
        sa.Column("approved_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("approved_by_admin_id", sa.String(), nullable=True),
        sa.Column("account_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("account_id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(
        op.f("ix_beta_testers_company_name"),
        "beta_testers",
        ["company_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_beta_testers_email"), "beta_testers", ["email"], unique=True
    )
    op.create_index(
        op.f("ix_beta_testers_status"), "beta_testers", ["status"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_beta_testers_status"), table_name="beta_testers")
    op.drop_index(op.f("ix_beta_testers_email"), table_name="beta_testers")
    op.drop_index(op.f("ix_beta_testers_company_name"), table_name="beta_testers")
    op.drop_table("beta_testers")
    # ### end Alembic commands ###
    db_beta_status_enum.drop(op.get_bind(), checkfirst=True)
