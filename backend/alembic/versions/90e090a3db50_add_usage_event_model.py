"""add usage event model

Revision ID: 90e090a3db50
Revises: c5b5da97ca5e
Create Date: 2025-05-25 02:06:47.306686

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '90e090a3db50'
down_revision: Union[str, None] = 'c5b5da97ca5e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('usage_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=False),
    sa.Column('meter_event_name', sa.String(), nullable=False, comment="The 'event_name' of the meter as configured in Stripe (e.g., 'generated_ia_messages')"),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='The amount of usage for this event (e.g., 1 for one message)'),
    sa.Column('event_timestamp', sa.DateTime(timezone=True), nullable=False, comment='Timestamp when the actual usage event occurred'),
    sa.Column('reported_to_stripe_at', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when this usage event (or an aggregation including it) was successfully reported to Stripe'),
    sa.Column('stripe_meter_event_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usage_events_account_id'), 'usage_events', ['account_id'], unique=False)
    op.create_index('ix_usage_events_account_id_meter_name_not_reported', 'usage_events', ['account_id', 'meter_event_name', 'reported_to_stripe_at'], unique=False, postgresql_where=sa.text('reported_to_stripe_at IS NULL'))
    op.create_index('ix_usage_events_event_timestamp', 'usage_events', ['event_timestamp'], unique=False)
    op.create_index(op.f('ix_usage_events_stripe_customer_id'), 'usage_events', ['stripe_customer_id'], unique=False)
    op.create_index('ix_usage_events_stripe_customer_id_meter_name_not_reported', 'usage_events', ['stripe_customer_id', 'meter_event_name', 'reported_to_stripe_at'], unique=False, postgresql_where=sa.text('reported_to_stripe_at IS NULL'))
    op.create_index(op.f('ix_usage_events_stripe_meter_event_id'), 'usage_events', ['stripe_meter_event_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_usage_events_stripe_meter_event_id'), table_name='usage_events')
    op.drop_index('ix_usage_events_stripe_customer_id_meter_name_not_reported', table_name='usage_events', postgresql_where=sa.text('reported_to_stripe_at IS NULL'))
    op.drop_index(op.f('ix_usage_events_stripe_customer_id'), table_name='usage_events')
    op.drop_index('ix_usage_events_event_timestamp', table_name='usage_events')
    op.drop_index('ix_usage_events_account_id_meter_name_not_reported', table_name='usage_events', postgresql_where=sa.text('reported_to_stripe_at IS NULL'))
    op.drop_index(op.f('ix_usage_events_account_id'), table_name='usage_events')
    op.drop_table('usage_events')
    # ### end Alembic commands ###
