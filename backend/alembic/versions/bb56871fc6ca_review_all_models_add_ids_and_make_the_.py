"""Review all models, add ids and make the types uniform

Revision ID: bb56871fc6ca
Revises: ae11c8140a56
Create Date: 2025-03-24 12:51:14.815751

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bb56871fc6ca'
down_revision: Union[str, None] = 'ae11c8140a56'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_table')
    op.add_column('access_tokens', sa.Column('expires_at', sa.DateTime(), nullable=True))
    op.add_column('access_tokens', sa.Column('revoked', sa.Boolean(), nullable=False))
    op.add_column('access_tokens', sa.Column('scopes', sa.String(length=255), nullable=True))
    op.alter_column('account_users', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('account_users', 'role',
               existing_type=sa.INTEGER(),
               type_=sa.Enum('ADMIN', 'AGENT', 'VIEWER', 'BOT', name='userrole'),
               existing_nullable=True)
    op.alter_column('accounts', 'locale',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=5),
               existing_nullable=True)
    op.alter_column('contact_inboxes', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('contact_inboxes_id_seq'::regclass)"))
    op.alter_column('contact_inboxes', 'contact_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('contact_inboxes', 'inbox_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('contacts', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('contacts_id_seq'::regclass)"))
    op.alter_column('contacts', 'source_id',
               existing_type=sa.BIGINT(),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.alter_column('conversations', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('conversations', 'contact_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('conversations', 'locked',
               existing_type=sa.SMALLINT(),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('inbox_members', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.create_unique_constraint('inbox_members_user_id_inbox_id_unique', 'inbox_members', ['user_id', 'inbox_id'])
    op.alter_column('inboxes', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('inboxes_id_seq'::regclass)"))
    op.alter_column('inboxes', 'enable_auto_assignment',
               existing_type=sa.SMALLINT(),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('messages', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('messages', 'message_type',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('messages', 'private',
               existing_type=sa.SMALLINT(),
               type_=sa.Boolean(),
               existing_nullable=True)
    op.alter_column('messages', 'status',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('messages', 'content_type',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('messages', 'content_type',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('messages', 'status',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('messages', 'private',
               existing_type=sa.Boolean(),
               type_=sa.SMALLINT(),
               existing_nullable=True)
    op.alter_column('messages', 'message_type',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('messages', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('inboxes', 'enable_auto_assignment',
               existing_type=sa.Boolean(),
               type_=sa.SMALLINT(),
               existing_nullable=True)
    op.alter_column('inboxes', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('inboxes_id_seq'::regclass)"))
    op.drop_constraint('inbox_members_user_id_inbox_id_unique', 'inbox_members', type_='unique')
    op.alter_column('inbox_members', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('conversations', 'locked',
               existing_type=sa.Boolean(),
               type_=sa.SMALLINT(),
               existing_nullable=True)
    op.alter_column('conversations', 'contact_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('conversations', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('contacts', 'source_id',
               existing_type=sa.String(length=255),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('contacts', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('contacts_id_seq'::regclass)"))
    op.alter_column('contact_inboxes', 'inbox_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('contact_inboxes', 'contact_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('contact_inboxes', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('contact_inboxes_id_seq'::regclass)"))
    op.alter_column('accounts', 'locale',
               existing_type=sa.String(length=5),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('account_users', 'role',
               existing_type=sa.Enum('ADMIN', 'AGENT', 'VIEWER', 'BOT', name='userrole'),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('account_users', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('access_tokens', 'scopes')
    op.drop_column('access_tokens', 'revoked')
    op.drop_column('access_tokens', 'expires_at')
    op.create_table('test_table',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='test_table_pkey')
    )
    # ### end Alembic commands ###
