"""Add KnowledgeDocument model and link to KnowledgeChunk

Revision ID: 9f36e4892390
Revises: df04dcbc33a4
Create Date: 2025-04-27 03:28:46.260199

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector

# revision identifiers, used by Alembic.
revision: str = "9f36e4892390"
down_revision: Union[str, None] = "df04dcbc33a4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "knowledge_documents",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("account_id", sa.UUID(), nullable=False),
        sa.Column("source_type", sa.String(), nullable=False),
        sa.Column("source_uri", sa.String(), nullable=False),
        sa.Column("original_filename", sa.String(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "PROCESSING",
                "COMPLETED",
                "FAILED",
                name="document_status_enum",
            ),
            nullable=False,
        ),
        sa.Column("error_message", sa.String(), nullable=True),
        sa.Column("chunk_count", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["account_id"], ["accounts.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_knowledge_documents_account_id"),
        "knowledge_documents",
        ["account_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_knowledge_documents_source_type"),
        "knowledge_documents",
        ["source_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_knowledge_documents_status"),
        "knowledge_documents",
        ["status"],
        unique=False,
    )
    op.alter_column(
        "knowledge_chunks",
        "source_type",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Tipo da fonte original (e.g., 'file', 'url', 'text')",
        existing_nullable=False,
    )
    op.alter_column(
        "knowledge_chunks",
        "source_identifier",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Identificador da fonte (e.g., filename, url)",
        existing_nullable=False,
    )
    op.alter_column(
        "knowledge_chunks",
        "chunk_text",
        existing_type=sa.TEXT(),
        comment=None,
        existing_comment="O conteúdo textual do chunk",
        existing_nullable=False,
    )
    op.alter_column(
        "knowledge_chunks",
        "embedding",
        existing_type=pgvector.sqlalchemy.vector.VECTOR(dim=1536),
        comment=None,
        existing_comment="Vetor de embedding do chunk",
        existing_nullable=False,
    )
    op.alter_column(
        "knowledge_chunks",
        "metadata",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        comment=None,
        existing_comment="Metadados adicionais (e.g., página, etc.)",
        existing_nullable=True,
    )
    op.drop_index(
        "ix_knowledge_chunks_embedding",
        table_name="knowledge_chunks",
        postgresql_using="hnsw",
    )
    op.create_foreign_key(
        None,
        "knowledge_chunks",
        "knowledge_documents",
        ["document_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_table_comment(
        "knowledge_chunks",
        existing_comment="Stores text chunks and their vector embeddings for RAG.",
        schema=None,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_comment(
        "knowledge_chunks",
        "Stores text chunks and their vector embeddings for RAG.",
        existing_comment=None,
        schema=None,
    )
    op.drop_constraint(None, "knowledge_chunks", type_="foreignkey")
    op.create_index(
        "ix_knowledge_chunks_embedding",
        "knowledge_chunks",
        ["embedding"],
        unique=False,
        postgresql_using="hnsw",
    )
    op.alter_column(
        "knowledge_chunks",
        "metadata",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        comment="Metadados adicionais (e.g., página, etc.)",
        existing_nullable=True,
    )
    op.alter_column(
        "knowledge_chunks",
        "embedding",
        existing_type=pgvector.sqlalchemy.vector.VECTOR(dim=1536),
        comment="Vetor de embedding do chunk",
        existing_nullable=False,
    )
    op.alter_column(
        "knowledge_chunks",
        "chunk_text",
        existing_type=sa.TEXT(),
        comment="O conteúdo textual do chunk",
        existing_nullable=False,
    )
    op.alter_column(
        "knowledge_chunks",
        "source_identifier",
        existing_type=sa.VARCHAR(),
        comment="Identificador da fonte (e.g., filename, url)",
        existing_nullable=False,
    )
    op.alter_column(
        "knowledge_chunks",
        "source_type",
        existing_type=sa.VARCHAR(),
        comment="Tipo da fonte original (e.g., 'file', 'url', 'text')",
        existing_nullable=False,
    )
    op.drop_index(
        op.f("ix_knowledge_documents_status"), table_name="knowledge_documents"
    )
    op.drop_index(
        op.f("ix_knowledge_documents_source_type"), table_name="knowledge_documents"
    )
    op.drop_index(
        op.f("ix_knowledge_documents_account_id"), table_name="knowledge_documents"
    )
    op.drop_table("knowledge_documents")
    # ### end Alembic commands ###
