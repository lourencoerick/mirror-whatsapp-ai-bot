# .github/workflows/deploy-workers.yml
name: Build & Push Worker Docker Images

on:
  push:
    branches: [master, refact/workers]
    paths:
      - "backend/app/workers/**"
      - "backend/app/services/researcher/**"
      - "backend/app/services/knowledge/**"
      - "backend/app/services/ai_reply/**"
      - "backend/app/workers/Dockerfile"
      - ".github/workflows/deploy-workers.yml"
  workflow_dispatch:

env:
  # Evita repetir a expressão
  DOCKERFILE_PATH: ./backend/app/workers/Dockerfile

jobs:
  # 1) Detecta alterações e calcula matriz ------------------------------------
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Filtrar paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            consumer:
              - 'backend/app/workers/consumer/**'
            response_sender:
              - 'backend/app/workers/response_sender/**'
            batch:
              - 'backend/app/workers/batch/**'
              - 'backend/app/services/researcher/**'
              - 'backend/app/services/knowledge/**'
            ai_replier:
              - 'backend/app/workers/ai_replier/**'
              - 'backend/app/services/ai_reply/**'

      # Gera a matriz dinâmica em JSON
      - name: Criar matriz de builds
        id: set-matrix
        run: |
          images=()
          if [[ "${{ steps.filter.outputs.consumer }}" == 'true' ]]; then images+=("worker-consumer"); fi
          if [[ "${{ steps.filter.outputs.response_sender }}" == 'true' ]]; then images+=("worker-response-sender"); fi
          if [[ "${{ steps.filter.outputs.batch }}" == 'true' ]]; then images+=("batch-arq-worker"); fi
          if [[ "${{ steps.filter.outputs.ai_replier }}" == 'true' ]]; then images+=("ai-replier-worker"); fi

          # Constrói JSON no formato { "include": [ { "img": "..." }, ... ] }
          json='{"include":['
          first=true
          for img in "${images[@]}"; do
            if [ "$first" = true ]; then first=false; else json+=','; fi
            json+='{"img":"'"$img"'"}'
          done
          json+=']}'

          echo "matrix=$json" >> "$GITHUB_OUTPUT"

  # 2) Build & Push em paralelo ------------------------------------------------
  build-and-push:
    needs: detect-changes
    # Se nada mudou, pula o job inteiro
    if: ${{ needs.detect-changes.outputs.matrix != '{"include":[]}' }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      # -- Autenticação GCP ---------------------------------------------------
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WIF_PROVIDER_NAME }}
          service_account: ${{ vars.GCP_SA_EMAIL }}
          audience: https://github.com/${{ github.github_org || github.repository_owner }}

      - uses: docker/setup-buildx-action@v3

      - name: Configurar Docker para o Artifact Registry
        run: gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev --quiet

      # -- Build + Push -------------------------------------------------------
      - name: Build & Push ${{ matrix.img }}
        env:
          GCP_REGION: ${{ vars.GCP_REGION }}
          GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          AR_REPO_ID: ${{ vars.AR_REPO_ID }}
        run: |
          IMAGE_NAME=${{ matrix.img }}
          TAG=${{ github.sha }}
          URL="${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${AR_REPO_ID}/${IMAGE_NAME}"

          echo "▶️  Building $IMAGE_NAME → $URL:$TAG"
          docker buildx build \
            -t "$URL:$TAG" -t "$URL:latest" \
            -f "$DOCKERFILE_PATH" . \
            --push \
            --cache-from type=gha \
            --cache-to type=gha,mode=max

# Opcional: evita que builds do mesmo branch se acumulem
concurrency:
  group: build-workers-${{ github.ref }}
  cancel-in-progress: true
