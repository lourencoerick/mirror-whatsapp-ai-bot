name: Build and Push Worker Docker Images

on:
  push:
    branches:
      - master
    # dispara se mudar qualquer coisa de workers, Dockerfile ou o próprio workflow
    paths:
      - 'backend/app/workers/**'
      - 'backend/app/workers/Dockerfile'
      - '.github/workflows/deploy-workers.yml'
  workflow_dispatch:

jobs:
  # 1) Detecta alterações
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      consumer:   ${{ steps.filter.outputs.consumer }}
      response:   ${{ steps.filter.outputs.response_sender }}
      batch:      ${{ steps.filter.outputs.batch_contacts }}
    steps:
      - uses: actions/checkout@v4

      - name: Filtrar paths
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            consumer:
              - 'backend/app/workers/consumer/**'
            response_sender:
              - 'backend/app/workers/response_sender/**'
            batch_contacts:
              - 'backend/app/workers/batch_contacts/**'

  # 2) Build & Push (um único job, mas cada step só roda se o filtro pedir)
  build-and-push:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: >
      needs.detect-changes.outputs.consumer == 'true' ||
      needs.detect-changes.outputs.response == 'true' ||
      needs.detect-changes.outputs.batch == 'true'
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- GCP Auth ---
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WIF_PROVIDER_NAME }}
          service_account:          ${{ vars.GCP_SA_EMAIL }}
          audience:                 https://github.com/${{ github.github_org || github.repository_owner }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev

      # --- Consumer Worker ---
      - name: Build & Push Consumer
        if: ${{ needs.detect-changes.outputs.consumer == 'true' }}
        env:
          GCP_REGION:    ${{ vars.GCP_REGION }}
          GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          AR_REPO_ID:     ${{ vars.AR_REPO_ID }}
          IMAGE_NAME:     worker-consumer
        run: |
          TAG=${{ github.sha }}
          URL="${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${AR_REPO_ID}/${IMAGE_NAME}"
          docker build -t "${URL}:${TAG}" -t "${URL}:latest" -f ./backend/app/workers/Dockerfile .
          docker push "${URL}:${TAG}"
          docker push "${URL}:latest"

      # --- Response Sender Worker ---
      - name: Build & Push Response Sender
        if: ${{ needs.detect-changes.outputs.response == 'true' }}
        env:
          GCP_REGION:    ${{ vars.GCP_REGION }}
          GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          AR_REPO_ID:     ${{ vars.AR_REPO_ID }}
          IMAGE_NAME:     worker-response-sender
        run: |
          TAG=${{ github.sha }}
          URL="${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${AR_REPO_ID}/${IMAGE_NAME}"
          docker build -t "${URL}:${TAG}" -t "${URL}:latest" -f ./backend/app/workers/Dockerfile .
          docker push "${URL}:${TAG}"
          docker push "${URL}:latest"

      # --- ARQ / Batch Contacts Worker ---
      - name: Build & Push Batch Contacts
        if: ${{ needs.detect-changes.outputs.batch == 'true' }}
        env:
          GCP_REGION:    ${{ vars.GCP_REGION }}
          GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          AR_REPO_ID:     ${{ vars.AR_REPO_ID }}
          IMAGE_NAME:     worker-arq
        run: |
          TAG=${{ github.sha }}
          URL="${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${AR_REPO_ID}/${IMAGE_NAME}"
          docker build -t "${URL}:${TAG}" -t "${URL}:latest" -f ./backend/app/workers/Dockerfile .
          docker push "${URL}:${TAG}"
          docker push "${URL}:latest"
