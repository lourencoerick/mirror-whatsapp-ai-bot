# .github/workflows/deploy-backend.yml
name: Build, Push & Deploy Backend

on:
  push:
    branches:
      - master
    paths:
      - "backend/**"
      - "Dockerfile"
      - "docker-compose.dev.yml"
      - ".github/workflows/deploy-backend.yml"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    env:
      GCP_REGION: ${{ vars.GCP_REGION }}
      GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
      AR_REPO_ID: ${{ vars.AR_REPO_ID }}
      IMAGE_NAME: fastapi-backend

    outputs:
      image-url: ${{ steps.set-image-url.outputs.image_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate GCP via WIF
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WIF_PROVIDER_NAME }}
          service_account: ${{ vars.GCP_SA_EMAIL }}
          audience: https://github.com/${{ github.repository_owner }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Build and Push Docker Image with Cache
        run: |
          TAG=${{ github.sha }}
          URL="${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${AR_REPO_ID}/${IMAGE_NAME}"
          docker buildx build \
            --push \
            --cache-from type=gha \
            --cache-to   type=gha,mode=max \
            --tag         "$URL:$TAG" \
            --tag         "$URL:latest" \
            --file        ./Dockerfile \
            .

      - name: Set image URL output
        id: set-image-url
        run: |
          echo "image_url=${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${AR_REPO_ID}/${IMAGE_NAME}:latest" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy to Cloud Run
    needs: build-and-push
    runs-on: ubuntu-latest

    env:
      GCP_REGION: ${{ vars.GCP_REGION }}
      GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}

    steps:
      - name: Authenticate GCP via WIF
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WIF_PROVIDER_NAME }}
          service_account: ${{ vars.GCP_SA_EMAIL }}
          audience: https://github.com/${{ github.repository_owner }}

      - name: Deploy to Cloud Run
        run: |
          IMAGE_URL="${{ needs.build-and-push.outputs.image-url }}"
          gcloud run deploy fastapi-backend-dev \
            --image           "$IMAGE_URL" \
            --region          "$GCP_REGION" \
            --platform        managed \
            --service-account "${{ secrets.BACKEND_API_SA_EMAIL }}" \
            --project         "$GCP_PROJECT_ID" \
            --quiet
